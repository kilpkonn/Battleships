@page
@Html.AntiForgeryToken()
@model WebApplication.Pages.Setup
@{
    ViewData["Title"] = "Battleships";
}

<div class="text-center">
    <table class="table board">
        @for (int y = 0; y < Model?.GameBoard?.Height; y++)
        {
            <tr>
                @for (int x = 0; x < Model?.GameBoard?.Width; x++)
                {
                    <td class="table-cell">
                        @if (Model.GameBoard.WhiteToMove)
                            {
                                <button onclick="placeShip(@Model.SessionId, @y, @x)"
                                        onmouseenter="visualizeShip(@y, @x)"
                                        class="btn-cell @Model.CellShipStatus(y, x)"
                                        id="cell-@y-@x">
                                    @* @Model.GameBoard.Board[(int) GameBoard.BoardType.WhiteShips][y, x] *@
                                </button>
                            }
                            else
                            {
                                <button onclick="placeShip(@Model.SessionId, @y, @x)"
                                        onmouseenter="visualizeShip(@y, @x)"
                                        class="btn-cell @Model.CellShipStatus(y, x)"
                                        id="cell-@y-@x">
                                    @* @Model.GameBoard.Board[(int) GameBoard.BoardType.BlackShips][y, x] *@
                                </button>
                            }
                    </td>
                }
            </tr>
        }
    </table>
    <div class="row">
        <button id="toggle-horizontal" onclick="toggleHorizontal()">Horizontal</button>
        @foreach (var (length, count) in Model!.GameBoard!.ShipCounts)
        {
            <button onclick="setShipSize(@length)" id="ship-size-@length">
                Size @length (@Model.ShipsToPlaceInSize(length))
            </button>
        }
    </div>
</div>

@section Scripts
{
    <script>
    let isHorizontal = true;
    let shipLength = @Model.MaxShipSize();
    
    $(window).keypress(function(e) {
       if (e.which === 32) {
          toggleHorizontal();
       }
    });
    
    function placeShip(session, y, x) {
      $.post("/Setup", {
          SessionId: session,
          ClickX: x,
          ClickY: y,
          IsHorizontal: isHorizontal,
          ShipLength: shipLength,
          __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
      }, function () {
          window.location.href = "/Setup?SessionId=@Model!.SessionId";
      });
    }
    
    function toggleHorizontal() {
        isHorizontal = !isHorizontal;
        $('#toggle-horizontal').text(isHorizontal ? 'Horizontal' : 'Vertical');
    }
    
    function setShipSize(size) {
        shipLength = size;    
    }
    
    function visualizeShip(y, x) {
        $('.preview-ship').removeClass('preview-ship');
        for (let i = 0; i < shipLength; i++) {
            if (isHorizontal) {
                $('#cell-' + y + '-' + (x + i)).addClass('preview-ship');
            } else {
                $('#cell-' + (y + i) + '-' + x).addClass('preview-ship');
            }
        }
    }
    </script>
}
